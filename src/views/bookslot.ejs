<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <title>Book Slot</title>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 2rem;
            background: #f9f9f9;
        }

        #slot-info {
            background-color: #fff;
            padding: 1rem 2rem;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 1rem;
        }

        button {
            padding: 10px 20px;
            background-color: #0a74da;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }

        button:hover {
            background-color: #065bb5;
        }

        #notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: #4caf50;
            color: white;
            padding: 15px 20px;
            border-radius: 8px;
            display: none;
            z-index: 1000;
            min-width: 200px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
            font-family: Arial, sans-serif;
        }
    </style>
</head>

<body>
    <h2>Book Your Slot</h2>
    <div id="slot-info">
        <p><strong>Tutor:</strong> <span id="tutor-name">
                <%= slot.tutorName %>
            </span></p>
        <p><strong>Date:</strong> <span id="slot-date">
                <%= new Date(slot.date).toDateString() %>
            </span></p>
        <p><strong>Time:</strong> <span id="slot-time">
                <%= slot.startTime %> - <%= slot.endTime %>
            </span></p>
        <p><strong>Rate:</strong> ₹<span id="slot-rate">
                <%= slot.rate %>
            </span></p>
        <p><strong>Total Payable:</strong> ₹<span id="slot-total">
                <%= slot.totalAmount %>
            </span></p>
    </div>
    <button id="rzp-button">Pay & Book</button>
    <div id="notification"></div>

    <script>
        const slotId = "<%= slotId %>";
        const slotData = {
            tutorName: "<%= slot.tutorName %>",
            rate: <%= slot.rate %>,
            totalAmount: <%= slot.totalAmount %>,
        };

        // Initialize Socket.io
        const socket = io('http://localhost:3000', {
            reconnection: true,
            reconnectionAttempts: 5,
            reconnectionDelay: 1000,
            auth: {
                token: null // Replace with JWT token if required
            }
        });

        socket.on('connect', () => {
            console.log('Connected to server:', socket.id);
            showNotification('Connected to server!');
        });

        socket.on('connect_error', (error) => {
            console.error('Connection error:', error.message);
            showNotification('Connection failed: ' + error.message, 'error');
        });

        socket.on('slotBooked', (data) => {
            console.log('Slot booked:', data);
            showNotification(`Slot booked for ${slotData.tutorName} at ${slotData.slotTime}!`);
            if (Notification.permission === 'granted') {
                new Notification('Slot Booked', {
                    body: `Slot booked for ${slotData.tutorName} at ${slotData.slotTime}!`,
                    icon: '/favicon.ico'
                });
            } else {
                console.log('Notification permission not granted');
                Notification.requestPermission().then(permission => {
                    console.log('Notification permission:', permission);
                    if (permission === 'granted') {
                        new Notification('Slot Booked', {
                            body: `Slot booked for ${slotData.tutorName} at ${slotData.slotTime}!`
                        });
                    }
                });
            }
        });

        function showNotification(message, type = 'success') {
            console.log('Showing notification:', message);
            const notification = document.getElementById('notification');
            if (!notification) {
                console.error('Notification element not found');
                return;
            }
            notification.textContent = message;
            notification.style.backgroundColor = type === 'error' ? '#f44336' : '#4caf50';
            notification.style.display = 'block';
            setTimeout(() => {
                notification.style.display = 'none';
            }, 3000);
        }

        if (Notification.permission !== 'granted') {
            Notification.requestPermission().then(permission => {
                console.log('Notification permission:', permission);
            });
        }

        async function createOrder() {
            const res = await fetch('/api/slot/payment/create-order', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ slotId, paymentMethod: "Razorpay" })
            });
            const data = await res.json();
            if (!res.ok) throw new Error(data.error || "Failed to create order");
            return data;
        }

        document.getElementById("rzp-button").addEventListener("click", async () => {
            try {
                const data = await createOrder();
                if (!data.order || !data.key) return alert("Invalid order data");

                const options = {
                    key: data.key,
                    amount: data.order.amount,
                    currency: "INR",
                    name: "Tutoring Platform",
                    description: `Booking with ${slotData.tutorName}`,
                    order_id: data.order.id,
                    handler: async function (response) {
                        console.log("Payment response:", response);
                        const verifyRes = await fetch('/api/slot/payment/verify', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_signature: response.razorpay_signature,
                                slotId,
                                paymentMethod: "Razorpay"
                            })
                        });
                        const result = await verifyRes.json();
                        console.log("Verification result:", result);
                        if (result.success) {
                            alert("Payment successful! Slot booked.");
                        } else {
                            alert(`Payment verification failed: ${result.message || 'Try again'}`);
                        }
                    },
                    theme: { color: "#0a74da" }
                };

                const rzp = new Razorpay(options);
                rzp.open();
            } catch (err) {
                alert(`Something went wrong: ${err.message}`);
                console.error("Payment error:", err);
            }
        });
    </script>
</body>

</html>